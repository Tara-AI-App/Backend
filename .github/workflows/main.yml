name: Deploy FastAPI to Google Cloud Run

on:
  push:
    branches:
      - main

env:
  GCP_PROJECT_ID: "id-rd-ca-qais-jabbar"
  GCP_REGION: "us-central1"
  CLOUD_RUN_SERVICE_NAME: "tara-backend"
  ARTIFACT_REGISTRY_REGION: "us-central1"
  ARTIFACT_REGISTRY_REPOSITORY: "tara-backend-repo"

jobs:
  deploy:
    name: Build and Deploy to Cloud Run
    runs-on: ubuntu-latest

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Define derived environment variables
        id: set_derived_vars
        run: |
          # Construct GAR_HOSTNAME (Artifact Registry Hostname)
          echo "GAR_HOSTNAME=${{ env.ARTIFACT_REGISTRY_REGION }}-docker.pkg.dev" >> $GITHUB_ENV
          
          # Define IMAGE_NAME (conceptual name for the image, often same as service)
          # This is used as the last part of the image path before the tag.
          echo "IMAGE_NAME=${{ env.CLOUD_RUN_SERVICE_NAME }}" >> $GITHUB_ENV
          
          # Construct full image paths using the base env vars
          echo "FULL_IMAGE_TAG_SHA=${{ env.ARTIFACT_REGISTRY_REGION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.ARTIFACT_REGISTRY_REPOSITORY }}/${{ env.CLOUD_RUN_SERVICE_NAME }}:${{ github.sha }}" >> $GITHUB_ENV
          echo "FULL_IMAGE_TAG_LATEST=${{ env.ARTIFACT_REGISTRY_REGION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.ARTIFACT_REGISTRY_REPOSITORY }}/${{ env.CLOUD_RUN_SERVICE_NAME }}:latest" >> $GITHUB_ENV

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT_EMAIL }}

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.GCP_PROJECT_ID }}

      - name: Configure Docker for Artifact Registry
        run: |-
          gcloud auth configure-docker ${{ env.GAR_HOSTNAME }} --quiet

      - name: Build Docker image
        run: |-
          docker build \
            --tag "${{ env.FULL_IMAGE_TAG_SHA }}" \
            --tag "${{ env.FULL_IMAGE_TAG_LATEST }}" \
            .
        working-directory: ./

      - name: Push Docker image to Artifact Registry
        run: |-
          docker push "${{ env.FULL_IMAGE_TAG_SHA }}"
          docker push "${{ env.FULL_IMAGE_TAG_LATEST }}"

      - name: Debug - Check GitHub Secrets Availability
        run: |-
          echo "=== DEBUGGING GITHUB SECRETS ==="
          echo "Checking if secrets are available (showing only presence, not values):"
          echo "DATABASE_URL: ${{ secrets.DATABASE_URL != '' && 'SET' || 'NOT SET' }}"
          echo "SECRET_KEY: ${{ secrets.SECRET_KEY != '' && 'SET' || 'NOT SET' }}"
          echo "GH_CLIENT_ID: ${{ secrets.GH_CLIENT_ID != '' && 'SET' || 'NOT SET' }}"
          echo "GH_CLIENT_SECRET: ${{ secrets.GH_CLIENT_SECRET != '' && 'SET' || 'NOT SET' }}"
          echo "GH_REDIRECT_URI: ${{ secrets.GH_REDIRECT_URI != '' && 'SET' || 'NOT SET' }}"
          echo "GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID != '' && 'SET' || 'NOT SET' }}"
          echo "GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET != '' && 'SET' || 'NOT SET' }}"
          echo "GOOGLE_REDIRECT_URI: ${{ secrets.GOOGLE_REDIRECT_URI != '' && 'SET' || 'NOT SET' }}"
          echo "GCP_SERVICE_ACCOUNT_EMAIL_CLOUDRUN: ${{ secrets.GCP_SERVICE_ACCOUNT_EMAIL_CLOUDRUN != '' && 'SET' || 'NOT SET' }}"
          echo "=================================="

      - name: Debug - Show Environment Variables Length (for validation)
        run: |-
          echo "=== DEBUGGING ENV VAR LENGTHS ==="
          echo "DATABASE_URL length: ${#DATABASE_URL}"
          echo "SECRET_KEY length: ${#SECRET_KEY}"
          echo "GH_CLIENT_ID length: ${#GH_CLIENT_ID}"
          echo "GH_CLIENT_SECRET length: ${#GH_CLIENT_SECRET}"
          echo "GH_REDIRECT_URI length: ${#GH_REDIRECT_URI}"
          echo "GOOGLE_CLIENT_ID length: ${#GOOGLE_CLIENT_ID}"
          echo "GOOGLE_CLIENT_SECRET length: ${#GOOGLE_CLIENT_SECRET}"
          echo "GOOGLE_REDIRECT_URI length: ${#GOOGLE_REDIRECT_URI}"
          echo "GCP_SERVICE_ACCOUNT_EMAIL_CLOUDRUN length: ${#GCP_SERVICE_ACCOUNT_EMAIL_CLOUDRUN}"
          echo "=================================="
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          GH_CLIENT_ID: ${{ secrets.GH_CLIENT_ID }}
          GH_CLIENT_SECRET: ${{ secrets.GH_CLIENT_SECRET }}
          GH_REDIRECT_URI: ${{ secrets.GH_REDIRECT_URI }}
          GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
          GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
          GOOGLE_REDIRECT_URI: ${{ secrets.GOOGLE_REDIRECT_URI }}
          GCP_SERVICE_ACCOUNT_EMAIL_CLOUDRUN: ${{ secrets.GCP_SERVICE_ACCOUNT_EMAIL_CLOUDRUN }}

      - name: Debug - Test gcloud auth and permissions
        run: |-
          echo "=== DEBUGGING GCLOUD AUTH ==="
          echo "Current gcloud account:"
          gcloud auth list --filter=status:ACTIVE --format="table(account)"
          echo ""
          echo "Current project:"
          gcloud config get-value project
          echo ""
          echo "Testing Cloud Run permissions:"
          gcloud run services list --region=${{ env.GCP_REGION }} || echo "Failed to list Cloud Run services - check permissions"
          echo ""
          echo "Testing if service already exists:"
          gcloud run services describe ${{ env.CLOUD_RUN_SERVICE_NAME }} --region=${{ env.GCP_REGION }} --format="value(metadata.name)" 2>/dev/null || echo "Service does not exist yet (this is normal for first deployment)"
          echo "=================================="

      - name: Deploy to Google Cloud Run
        env:
          GCP_SERVICE_ACCOUNT_EMAIL_CLOUDRUN: ${{ secrets.GCP_SERVICE_ACCOUNT_EMAIL_CLOUDRUN }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          GH_CLIENT_ID: ${{ secrets.GH_CLIENT_ID }}
          GH_CLIENT_SECRET: ${{ secrets.GH_CLIENT_SECRET }}
          GH_REDIRECT_URI: ${{ secrets.GH_REDIRECT_URI }}
          GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
          GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
          GOOGLE_REDIRECT_URI: ${{ secrets.GOOGLE_REDIRECT_URI }}
        run: |-
          echo "=== STARTING CLOUD RUN DEPLOYMENT ==="
          echo "Image: ${{ env.FULL_IMAGE_TAG_SHA }}"
          echo "Service: ${{ env.CLOUD_RUN_SERVICE_NAME }}"
          echo "Region: ${{ env.GCP_REGION }}"
          echo "Service Account: ${GCP_SERVICE_ACCOUNT_EMAIL_CLOUDRUN}"
          echo ""
          
          # Create environment variables file to handle special characters
          cat > env_vars.yaml << 'EOF'
          DATABASE_URL: "${DATABASE_URL}"
          SECRET_KEY: "${SECRET_KEY}"
          GH_CLIENT_ID: "${GH_CLIENT_ID}"
          GH_CLIENT_SECRET: "${GH_CLIENT_SECRET}"
          GH_REDIRECT_URI: "${GH_REDIRECT_URI}"
          GOOGLE_CLIENT_ID: "${GOOGLE_CLIENT_ID}"
          GOOGLE_CLIENT_SECRET: "${GOOGLE_CLIENT_SECRET}"
          GOOGLE_REDIRECT_URI: "${GOOGLE_REDIRECT_URI}"
          EOF
          
          # Substitute environment variables in the file
          envsubst < env_vars.yaml > env_vars_final.yaml
          
          echo "Environment variables file contents:"
          cat env_vars_final.yaml
          echo ""
          
          # Deploy with environment variables file
          gcloud run deploy ${{ env.CLOUD_RUN_SERVICE_NAME }} \
            --image "${{ env.FULL_IMAGE_TAG_SHA }}" \
            --region "${{ env.GCP_REGION }}" \
            --platform "managed" \
            --port "9000" \
            --allow-unauthenticated \
            --ingress all \
            --service-account="${GCP_SERVICE_ACCOUNT_EMAIL_CLOUDRUN}" \
            --min-instances=0 \
            --max-instances=2 \
            --timeout=3600 \
            --cpu=2 \
            --memory=4Gi \
            --env-vars-file=env_vars_final.yaml \
            --verbosity=info
          
          # Clean up temporary files
          rm -f env_vars.yaml env_vars_final.yaml
          
          echo "=== DEPLOYMENT COMMAND COMPLETED ==="

      - name: Debug - Verify Environment Variables in Cloud Run
        if: always()
        run: |-
          echo "=== VERIFYING CLOUD RUN ENVIRONMENT VARIABLES ==="
          echo "Checking if environment variables were set correctly in the deployed service:"
          gcloud run services describe ${{ env.CLOUD_RUN_SERVICE_NAME }} \
            --region=${{ env.GCP_REGION }} \
            --format="value(spec.template.spec.template.spec.containers[0].env[].name)" | sort
          echo ""
          echo "Environment variables count:"
          gcloud run services describe ${{ env.CLOUD_RUN_SERVICE_NAME }} \
            --region=${{ env.GCP_REGION }} \
            --format="value(spec.template.spec.template.spec.containers[0].env[].name)" | wc -l
          echo "=================================="

      - name: Display Cloud Run Service URL
        if: always()
        run: |-
          SERVICE_URL=$(gcloud run services describe ${{ env.CLOUD_RUN_SERVICE_NAME }} --platform managed --region ${{ env.GCP_REGION }} --format 'value(status.url)')
          echo "Cloud Run Service URL: ${SERVICE_URL}"